#!/usr/bin/env node

/**
 * This is the notify script to our group chat.
 *
 */
const program = require('commander');
const spawnSync = require('child_process').spawnSync;
const http = require('https');

program
    .option('-s, --status <status>', 'success or fail')
    .parse(process.argv);

const status = program.status;
const chatId = process.env.CHAT_ID || "543744067";
const token = process.env.TELEGRAM_TOKEN;
const username = process.env.CIRCLE_USERNAME;
const repo = process.env.CIRCLE_PROJECT_REPONAME;
const pullRequestUrl = process.env.CIRCLE_PULL_REQUEST;
const buildUrl = process.env.CIRCLE_BUILD_URL;
const branch = process.env.CIRCLE_BRANCH;
const changesUrl = process.env.CIRCLE_COMPARE_URL;

if (!status) {
    console.error(`status not valid.`);
    process.exit(-1);
}
if (!token) {
    console.error('No TELEGRAM_TOKEN defined');
    process.exit(-1);
}
if (!repo) {
    console.error(`repo not valid.`);
    process.exit(-1);
}

if (!branch) {
    console.error(`branch not valid.`);
    process.exit(-1);
}

if (!buildUrl) {
    console.error(`url not valid.`);
    process.exit(-1);
}

function post(text) {
    const requestBody = `{"chat_id":${chatId}, "text":"${text}"}`;
    const options = {
        host: 'api.telegram.org',
        path: `/bot${token}/sendMessage`,
        port: 443,
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Content-Length': requestBody.length
        }
    };

    const req = http.request(options, (res) => {
        var responseString = '';

        res.on('data', function (data) {
            responseString += data;
            // save all the data from response
        });
        res.on('end', function () {
            console.log(responseString);
        });
    });
    req.write(requestBody);
    req.end();
}

const message = `*${repo} ${status.toUpperCase()}*

LOG: ${buildUrl}

GIT COMMITS: ${changesUrl}

BRANCH: ${branch}
PR: ${pullRequestUrl}
`;

// only send if a PR was open
if (pullRequestUrl) {
    post(message);
} else {
    process.exit(0);
}

